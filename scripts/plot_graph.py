from collections import defaultdict
from typing import Dict, Tuple

from tbparser.summary_reader import SummaryReader
from pathlib import Path
import matplotlib.pyplot as plt
import pandas as pd
import argparse
import matplotlib
matplotlib.use('Agg')


def plot_graph(dir):
    logs_path = Path(dir) / "lightning_logs"
    if not logs_path.exists():
        raise FileNotFoundError(f"Logs path {logs_path} does not exist.")
    versions = [x for x in logs_path.glob("version*") if x.is_dir()]
    summary_dict: Dict[int, Dict[str, float]] = defaultdict(dict)  # step => {epoch, train_loss, val_loss}
    for version in versions:
        reader = SummaryReader(version, tag_filter=['train_loss', 'val_loss', 'epoch'])
        for stat in reader:
            summary_dict[stat.step][stat.tag] = stat.value
    values = pd.DataFrame.from_dict(summary_dict, orient='index')
    values.dropna(subset=['train_loss', 'val_loss'], inplace=True)
    values.sort_values(by=['epoch'], inplace=True)
    values.to_csv(experiment_dir / "loss.csv")
    plt.figure(figsize=(10, 5))
    plt.plot(values['epoch'], values['train_loss'], label='train_loss')
    plt.plot(values['epoch'], values['val_loss'], label='val_loss')
    plt.legend()
    plt.title(f"Loss curve for f{str(experiment_dir)}")
    plt.savefig(dir / "loss_curve.pdf", dpi=300, bbox_inches='tight')
    print(f"Processed {str(dir)}")


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("--output-dir", help="The directory containing the outputs of model runs", default='output')
    args = parser.parse_args()
    output_dir = Path(args.output_dir)
    if not output_dir.exists():
        raise FileNotFoundError(f"Output Directory f{output_dir} does not exist")
    for subdir in output_dir.iterdir():
        if subdir.is_dir():
            for experiment_dir in subdir.iterdir():
                try:
                    plot_graph(experiment_dir)
                except FileNotFoundError as e:
                    print(f"Got error - {e.strerror}. Continuing...")
